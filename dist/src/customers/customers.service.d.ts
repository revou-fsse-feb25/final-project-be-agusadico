import { PrismaService } from "../prisma/prisma.service";
import { CreateCustomerDto } from "./dto/create-customer.dto";
import { UpdateCustomerDto } from "./dto/update-customer.dto";
import { UpdateRoleDto } from "./dto/update-role.dto";
import { AuthenticatedUser } from "../auth/interfaces/user.interface";
import { CreateGuestCustomerDto } from "./dto/create-guest-customer.dto";
export declare class CustomersService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(createCustomerDto: CreateCustomerDto): Promise<{
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    createGuest(createGuestCustomerDto: CreateGuestCustomerDto): Promise<{
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(): Promise<({
        lastOrder: {
            customerId: number;
            id: number;
            date: Date;
            amount: number;
        } | null;
    } & {
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    })[]>;
    findOne(id: number): Promise<{
        lastOrder: {
            customerId: number;
            id: number;
            date: Date;
            amount: number;
        } | null;
        orders: {
            customerId: number | null;
            id: number;
            createdAt: Date;
            orderId: string;
            date: Date;
            bookedAtIso: Date | null;
            customerName: string;
            typeOrder: import(".prisma/client").$Enums.OrderType;
            amount: number;
            status: import(".prisma/client").$Enums.OrderStatus;
            note: string | null;
        }[];
    } & {
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findByCustomerId(customerId: string): Promise<{
        lastOrder: {
            customerId: number;
            id: number;
            date: Date;
            amount: number;
        } | null;
        orders: {
            customerId: number | null;
            id: number;
            createdAt: Date;
            orderId: string;
            date: Date;
            bookedAtIso: Date | null;
            customerName: string;
            typeOrder: import(".prisma/client").$Enums.OrderType;
            amount: number;
            status: import(".prisma/client").$Enums.OrderStatus;
            note: string | null;
        }[];
    } & {
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    update(id: number, updateCustomerDto: UpdateCustomerDto, user?: AuthenticatedUser): Promise<{
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    updateRole(id: number, updateRoleDto: UpdateRoleDto): Promise<{
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
    remove(id: number): Promise<{
        customerId: string;
        name: string;
        email: string;
        password: string | null;
        username: string | null;
        phone: string | null;
        address: string | null;
        city: string | null;
        birthday: Date | null;
        image: string | null;
        location: string | null;
        totalSpent: number;
        role: import(".prisma/client").$Enums.UserRole;
        id: number;
        joinDate: Date;
        createdAt: Date;
        updatedAt: Date;
    }>;
}
